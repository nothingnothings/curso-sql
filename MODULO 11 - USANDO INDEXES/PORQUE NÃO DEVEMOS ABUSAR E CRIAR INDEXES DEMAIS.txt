





OK... NA ÚLTIMA LIÇÃO, APRENDEMOS QUE INDEXES 

SÃO 

BEM ÚTEIS,

E QUE 


PODEM AUMENTAR CONSIDERAVELMENTE A 


VELOCIDADE DE 


1 QUERY...
















ENTRETANTO, CONFORME MENCIONADO,

VOCê 

NUNCA VAI OBTER 

INDEXES 

PARA 

SUAS COLUMNS 'OUT-OF-THE-BOX'..













ISSO É PQ, DE FATO,

VOCÊ 

N 

DEVE 

USAR 



INDEXES EM EXCESSO..












--> VOCê 

VAI APRENDER A CRIAR INDEXES,

SIM,



INDEXES PARA COLUMNS,





MAS _ VOCÊ 

NÃO 

DEVE COMEÇAR 

A CRIAR 

INDEXES 



PARA TODAS AS COLUMNS EM 1 TABLE...













E A RAZÃO PARA ISSO É QUE,


COM 

INDEXES EM EXCESSO,


VC 
PODE 

ACABAR 


COM UMA PERFORMANCE PIOR DO QUE NÃO POSSUINDO NENHUM INDEX...












OK, MAS POR QUE ISSO ACONTECE?












BEM, CONFORME APRENDEMOS, 

OS INDEXES PODEM ACELERAR QUERIES,


QUERIES ENVOLVENDO 'WHERE' (




    SELECT, UPDATE E DELETE, COM O USO DE WHERE...
)









---> CERTO...




mas o uso de 'WHERE' é ESSENCIAL, JUSTAMENTE PQ É ISSO QUE 



FAZ 'NARROW DOWN'


DE 1 TABLE A APENAS CERTOS COLUMNS... (




    EVITAR 1 'FULL ROW/TABLE SCAN'..., limitar a apenas algumas columns/1 column....
)
















OK, MAS REALMENTE PODEMOS ACELEERAR ESSAS QUERIES QUE USAM 'WHERE'...
















MAS É AÍ QUE SURGE O PROBLEMA:







SE VC TEM 1 INDEX ASSIGNADO A 1 COLUMN,



SEMPRE QUE O VALUE NESSA COLUMN MUDAR/ALGUM VALUE DESSA COLUMN FOR ALTERADO,







__ ESSE VALUE DEVERÁ SER,  OBRIGATORIAMENTE,



UPDATADO 




NA ''''TABLE'''(ou list) DO 'INDEX'...













--> ISSO SIGNIFICA QUE VAMOS PRECISAR DE 2 UPDATES:



1 UPDATE NA TABLE,


E OUTRO NA INDEX LIST,








SE 1 VALUE FOR ALTERADO... -------> E ISSO NÃO É TOTALMENTE HORRÍVEL,






MAS PODE SER BEM PROBLEMÁTICO ____ SE TIVERMOS MÚLTIPLOS INDEXES___ __ OU 



SE __ TIVERMOS MUDANÇAS FREQUENTES NOS NOSSOS VALUES..


















OU SEJA,




INDEXES SÃO UM 'NO GO' 


QUANDO 


TEMOS OS CASOS DE:





1) MTOS INDEXES PARA 1 MESMA TABLE  (updates em excesso)




2) VALUE CHANGES FREQUENTES NESSA TABLE














--> SE TEMOS MTOS INDEXES PARA 1  MESMA TABLE,



UM MONTE DE 


INDEXES ASSIGNADOS PARA 




MÚLTIPLAS COLUMNS EM 1 MESMA TABLE,


O PROBLEMA É QUE 

SEMPRE QUE 




ATUALIZARMOS O 

VALUE DE 1 ROW 




NESSA TABLE,

OU EM MÚLTIPLOS ROWS,




__ UM MONTE__ DE INDEXES_  TERÃO DE SER _ ATUALIZADOS... -> O RDBMS VAI REALMENTE SER FORÇADO 


A ATUALIZAR ESSES INDEXES...




















E SE __ 1 NOVO ROW É INSERTADO,

E SE VOCÊ AÍ TEM 







5 OU 6 INDEXES ASSIGNADOS A ESSA ÚNICA TABLE,





ISSO QUER DIZER QUE ___ 5 OU 6 


__ INDEX TABLES__ TERÃO DE SER ATUALIZADAS 



COM ESSA 
RECÉM-ADICIONADA 'ROW'

E SUA DATA...








EM OUTRAS PALAVRAS,

ISSO 

VAI FAZER COM QUE 



1 __ SIMPLES _ INSERT __ OPERATION SE __ TORNE 


6-7 INSERT OPERATIONS,




EM QUE __ DIFERENTES 


PARTES _  



DO RDBMS 

PRECISAM SER UPDATADOS,

TUDO PQ 



1 ÚNICO ROW 

FOI INSERIDO... ------------> E ISSO PODE RAPIDAMENTE 



SE TORNAR MT INEFICIETNE,



E ACTUALLY SLOW DOWN 

AS QUERIES 


E A OVERALL DATABASE PERFORMANCE...
















--> A MESMA SITUAÇÃO É OBSERVADA 

SE 


TIVERMOS VALUE CHANGES FREQUENTES ->  NESSE CASO,


ATÉ MESMO 



1 QUANTIDADE INFERIOR DE INDEXES (como 1 ou 2)


PODE 
SER PROBLEMÁTICA...












-------> SE VOCê TEM DATA QUE 



MUDA TODA HORA,



HIGH-FREQUENCY DATA,

COMO 
'TRADING DATA',





OU SEJA,




TABLE EM QUE 1 

MONTE 



DE __ NOVA __ DATA É INSERIDA,


OU ENTÃO 





EM QUE 



1 MONTE DE DATA ARMAZEANDA É ATUALIZADA O TEMPO INTEIRO -->  TALVEZ MÚLTIPLAS VEZES 

POR SEGUNDO...












--> SE VOCÊ TIVER MAIS DO QUE 



1 OU 3 INDEXES NESSA TABLE,





TODOS OS INDEX VALUES _ TAMBÉM _ _TERÃO _ DE SER ATUALIZADOS 



MÚLTIPLAS VEZES POR SEGUNDO --------> E ISSO, TAMBÉM,
PODE 

ACABAR 

SLOWING DOWN 



A QUERY E OVERALL DATABASE PERFORMANCE..

























-------------> É POR ISSO QUE É SEMPRE BOM TER CUIDADO:




1) VOCÊ VAI QUERER SEMPRE USAR 

INDEXES EM _ COLUMNS __ 

QUE __ VOCê 
USA 

1 

MONTE COM SUAS CLAUSES DE 'WHERE',



MAS _ COLUMNS __ QEU 


VOCê NÃO VAI 'UPDATE'

COM MT FREQUÊNCIA...







--> E SE VOCê TIVER 1 COLUMN QUE VOCê USA COM CERTAS CLAUSES DE WHERE,

SIM,


_ MAS __ APENAS __ OCASIONALMENTE,


FAZER O ADD DE 1 INDEX NESSA TABLE,

PARA 

ESSA COLUMN,



TALVEZ 

NÃO VALHA A PENA O ESFORÇO....












--> EM VEZ DISSO,



VOCÊ DEVE 

USAR __ INDEXES _ 

PARA __ COLUMNS __ QUE 

SÃO USADAS COM 'SELECT XXX FROM XX WHERE' UM MONTE (ou seja, com QUERIES DE GET, e não update/delete)...









--> OU SEJA, USE INDEXES COM COLUMNS QUE NÃO MUDAM mt seus valores..








--> OK...






MAS APESAR DISSO,


INDEXES PODEM ACELERAR BASTANTE SUAS QUERIES,


E TE DAR 1 PERFORMANCE BOOST...