You learned that most tables should have a PRIMARY KEY and that often, an auto-incrementing ID
 will be used as a primary key.


 But you also learned that this is not a must-do - you can use any column as a primary key!





 But when should you use which column? When should you use a user's email as a primary key, 
 instead of an "artificially added" id column?




 There are couple of thoughts I want to share about this important question:




 
 - You can always use an auto-incrementing id column
  if you want to or if you didn't find a better "real identification criteria" for a given table and its records...






- You could consider using another column (e.g. an email)
 if that is the "real identification criteria" of the table's records
  (for example, you could argue that users are indeed uniquely identified 
  via their email addresses - hence you could use the email column as a PRIMARY KEY column)










- You might still want to add and use an "artificial primary key" (a so-called surrogate key) 
for various reasons:



1) Maybe despite being identified uniquely via email addresses, you want to also have unique
 IDs for users (e.g. so that you have a simpler and shorter unique value per user)




 2) Some potential "real keys" might take up lots of memory and could therefore even slow down queries => Auto-incrementing ids might be more efficient to use
  for frequent queries (especially when also working with lots of complex relationships)




3) Some columns might look unique at first - but aren't if you think about them again 
(e.g. the "street" of an address might be unique - but only per city; the same street could be
 part of multiple cities or even countries)





 Ultimately, it will always come down to a variety of factors: The exact use-case you have, experience,
  personal preferences etc. You should be open to look for "real keys" instead of always automatically
  using auto-incrementing IDs but you probably also shouldn't force it.