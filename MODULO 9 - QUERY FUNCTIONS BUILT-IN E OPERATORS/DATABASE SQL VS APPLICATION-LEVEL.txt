













-----> OK... AGORA VIMOS DIFERENTES MANEIRAS 



DE INTERAGIR COM DATA __ ARMAZENADA NA NOSSA DATABASE... TAMBÉM 

VIMOS 

COMO __ ALTERAR ESSA INFO (


    por exemplo,

    por meio do 'ROUND()' de numbers,

    ou então por meio da 

    conversão 


    em UPPER ou LOWER do value de 1 string,

    antes de inserí-la em uma table...
)




O FATO DE QUE PODEMOS FAZER TUDO ISSO NO SQL É ÓTIMO,






MAS __ ISSO __ N QUER DIZER QUE 
O SQL 


É SEMPRE  

A FERRAMENTA APROPRIADA 

PARA REALIZAR ESSAS CHANGES,


OU PARA PERFORMAR 'CHECKS', EM GERAL... --> TUDO SEMPRE DEPENDE DO PROJETO



EM QUE ESTAMOS TRABALHANDO..








TUDO DEPENDE:



1) SE ESTAMOS TRABALHANDO EM 1 PROJETO 'APP-FOCUSED',



OU 



2) SE ESTAMOS TRABALHANDO EM 1 PROJETO 'DATABASE-FOCUSED/SQL'...









--> PODEMOS PENSAR EM 1 APP 


NORMAL,


COMO 

FACEBOOK OU UBER,





E, LÁ ,

1 USE-CASE TÍPICO SERIA
 

 1
  USER 


  CRIANDO UMA NOVA CONTA.. --> COLOCA O EMAIL,

  FIRST NAME 

  E LAST NAME..









  --> TODA ESSA INFO 


  _ DEVE SER CHECADA (

    checks como 'SE HÁ ESPAÇOS EM BRANCO',

    'SE EMAILS ESTÃO CORRETOS',

    'TRANSFORMAÇÕES COMO UPPERCASE E LOWERCASE',

    etc...
  )









  --> EM CASOS COMO ESSES,



NÃO PERFORMARÍAMOS ESSAS OPERATIONS NO DATABASE-LEVEL,

E SIM 



__ PROVIDENCIARÍAMOS/PROVIDENCIAMOS 

1 RESPONSE AO USER,

QUE ALGO ESTÁ ERRADO (error message, redirect to new webpage)...





JUSTAMENTE PQ, 



SE __ O 'NOTE' DE QUE ALGO DEU ERRADO LÁ 

NO DATABASE-LEVEL 



É BEM __ATRASADO_,

 
 E É BEM INÚTIL/RUIM,

 PQ 

 NÃO VAI INFORMAR O USER DIRETAMENTE (precisará do BACKEND, do servidor, para RECEBER ESSA INFO E ENTÃO A INTERPRETAR)...










 É POR ISSO QUE QUANDO 

 TRABALHAMOS COM APPS COMO ESSES,

 OU _QUANDO

 TEMOS 


 CHECKS 



 MAIS COMPLEXOS (como error handling mais complexo),






 VALIDATIONS MAIS COMPLEXAS,

 como 

 remove 

 de whitespace,


 FAREMOS ISSO NO APP-LEVEL...















 2) POR OUTRO LADO,

 SE ESTAMOS 

 TRABALHANDO APENAS COM A DATABASE,

 DATABASE-FOCUSED,



 DATA ANALYSTS,



 QUE 

 REALIZAM TASKS SOBRE 


 DATABASES SQL... --> AÍ, NESSE CASO,


 APLICAR TRANSFORMATIONS SOBRE AS TABLES É ALGO TOTALMENTE VÁLIDO --> 
 PQ 
 LÁ 

 N TEM TEMOS FOCO NO APP,




 E àS VEZES NEM TEMOS APP,







O QUE QUER DIZER QUE 



O ÚNICO INPUT DE QUE PRECISAMOS, 


COM BASE NAS NOSSAS TASKS,

DEVERÁ 

SER PROVIDENCIADO 

AO DATA ANALYST TRABALHANDO DIRETAMENTE NA DATABASE...












----> 'DIRECT INPUT VIA SQL STATEMENT TO RETRIEVE SPECIFIC DATA' --> NESSES CASOS,


AS OPERAÇÕES COMO 'REMOVE WHITE SPACE' 


_ PODE __ SER APLICADAS 'NO NÍVEL DA DATABASE'..













--> É CLARO QUE NÃO EXISTE DIFERENCIAÇÃO 

ESTRITA ENTRE ESSES 


2 TIPOS DE PROJETOS,


MAS O FATO 



É QUE __ 

'APESAR DE TAREFAS ESPECÍFICAS 

PODEREM 

SER 

APLICADAS 

NO SQL,

ESSA NEM SEMPRE SERÁ/DEVERÁ SER A SUA PRIMEIRA ESCOLHA'...











--> aGORA PODEMOS SEGUIR AO PRÓXIMO MÓDULO...