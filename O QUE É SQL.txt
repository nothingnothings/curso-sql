







--> O QUE É SQL? 








SQL É UMA LINGUAGEM QUE É USADA PARA FFAZER QUERY DE DATA,








PARA TRABALHAR COM DATA...









--> PARA SER MAIS PRECISO,
É 


PARA 

TRABALHAR COM DATA QUE 


POSSUI ESTRUTURA BEM DEFINIDA,







E QUE 

ENTÃO 

É 

SPLITTADA 

POR 



MÚLTIPLAS TABELAS,


QUE PODEM SER/ESTAR 

RELATED..









--> A DATA É ORGANIZADA POR 'TABLES'..











--> cADA TABLE TEM MÚLTIPLAS COLUNAS,

E MÚLTIPLOS ROWS...











EXEMPLO DE QUERY SQL:








SELECT id, first_name, salary 

FROM employees 
WHERE salary > 10000;







INSERT INTO employees (first_name, salary)
VALUES ('Max', 9000);




DELETE FROM employees
WHERE id = 2;













=-----> 






a data é splittada 



ao longo de múltiplas tables..








--> TABLES -> O SQL É USADO PARA TRABALHAR COM DATA 



EM UMA 'TABULAR FORM'...










--> CADA TABLE TEM MÚLTIPLAS COLUMNS,

E DIFERENETS ROWS...









ex:










Employees 


id name salary dep_id 


1  Max 10000 1 
2  Jue 15000 1 
3 Marc 8000 3 










DEPARTMENTS 



id dep_name location


1  Developers Munich
2  Sales Berlin 
3 Accounting Berlin











--> USAMOS DIFERENTES TABLES,

QUE POSSUIRÃO

RELAÇÃO ENTRE SI (
    teremos uma 

    relação 

    lógica 

    entre 

    EMPLOYEES 


    e 

    departments,


PQ 

EMPLOYEES PODEM FAZER PARTE 


DE 

DIFERENTES DEPARTMENTS...
)












--> E AÍ O SQL É UMA LINGUA QUE PODE SER USADA 

PARA 

SELECIONAR 


__DATA__ DESSAS TABLES,

PARA _ FAZER_ MERGE_ 






DE 


DATA__ DE DIFERENTES TABLES

__ EM 1 ÚNICO 



'RESULT SET'...

















EXEMPLO DISSO É ESTA QUERY:






SELECT name, salary, dep_name, location 
FROM employees INNER JOIN departments ON dep_id = departments.id 
WHERE salary >= 10000







(THIS IS A SQL COMMAND),



que 

resulta nisso:







name   salary  dep_name  location

Max  10000 Developers  Munich

Julie 15000 Developers Munich


















--> PODEMOS USAR A DATA DESSAS TABLES PARA MERGEÁ-LA 

EM 1 ÚNICO 'RESULT SET'..







--> MAS NÃO É SÓ ISSO QUE PODEMOS FAZER COM SQL...

(
    mas é o use-case mais utilizado, o 

    MERGING, QUERYING E FILTERING DE DATA...
)










-_> MAS O SQL TAMBÉM PODE SER USADO PARA 

O:




1) INSERT 


2) UPDATE 



3) DELETE 




4) FETCH + FILTER 












---> E SQL PODE SER ÚTIL TAMBÉM PARA 
CRIAR 

AS DATABASES 



E AS TABLES NESSAS DATABASES,

EM PRIMEIRO LUGAR...











--> E AÍ, NESSAS TABLES,



TEMOS 



ESSAS COLUMNS E ROWS, CONFORME MENCIONADO... -> E O SQL, QUANDO USADO 


PARA 

CRIAR ESSAS TABLES,

TAMBÉM É USADO PARA DESCREVER ESSA TABLE (
    para 

    definir claramente 

    'QUAL COLUMN VÃO EM 1 TABLE',


    E QUAIS 

    TIPOS DE DATA 

    PODERÃO SER DEFINIDOS NESSAS COLUMNS...
)










-> ISSO PQ ESSA ESTRUTURA CLARA,

ESSA ESTRUTURA 


QUE TODOS 


OS ROWS DEVEM SEGUIR,

É UMA KEY FEATURE DO SQL.... --> 
 









 NA VERDAADE,





 É __ UMA KEY FEATURE __ 




 DAS 


 'RELATIONAL DATABASE MANAGEMENT SYSTEMS' (RDBMS) 


,

QUE _ SÃO _ AS FERRAMENTAS  

__ USAM 


O SQL __ INTERNAMENTE... 












RELATIONAL DATABASE MANAGEMENT SYSTEMS -----> SÃO SOFTWARE 

QUE __ HANDLA __ 

A 'ACTUAL DATA MANAGEMENT AND STORAGE' ---> ELES USAM 


O SQL, COMO LINGUAGEM ,


PARA _ POSSIBILITAR A INTERAÇÃO COM A 


DATABASE (
    para o create de tables, por exemplo
)


E COM A DATA ARMAZENADA NESSAS TABLES (Ex: select e filter data, insert data)...











----> O SOFTWARE  




QUE INSTALAREMOS NO NOSSO CURSO,


POSTGRES E MYSQL,



são softwares
'RELATIONAL DATABASE MANAGEMENT SYSTEM'..












--> MYSQL...







--> POSTGRESQL





---> ORACLE DATABASE 



--> MICROSOFT SQL SERVER 



--> MICROSOFT ACCESS 




--> SQLite...











----> SÃO FERRAMENTAS QUE USAM O SQL INTERNAMENTE,

PQ 

ESSAS SÃO AS FERRAMENTAS 
QUE 

ACTUALLY 



__ FAZEM O STORE DA DATA,

QUE 

ACTUALLY 

FAZEM O ORGANIZE DA DATA EM TABLES...












-----> SQL É __ APENAS _ A LINGUAGEM UTILIZADA __ PARA INTERAGIR 

COM ESSAS FERRAMENTAS E DATA QUE ELAS SEGURAM...









--> SQL E sequel --> OS 2 SÃO A MESMA COISA...










SQL ----> É A MANEIRA MAIS OFICIAL -----> 








'SQL' --> 'STRUCTURED QUERY LANGUAGE'...







é por isso que 



o ACRÔNIMO SQL É MAIS 'OFICIAL'... -----> É UMA STANDARDIZED LANGUAGE...







--> ESSE ERA O NOME OFICIAL...







--> MANTERAM O NOME 'SQL'... 
















--> 'Sequel' --> 



É A LANGUAGE NAME MAIS UTILIZADA..






--> É MAIS FÁCIL DE MENCIONAR...













SQL --> 



SIGNIFICA A MESMA COISA...










-_ OK... 






CARACTERÍSTICAS CORE DESSA LANGUAGE,



OU 
DESSAS TOOLS RDBMS 



QUE UTILIZAM 


ESSA LINGUAGEM,


É QUE 

 

ARMAZENAMOS 

A 

DATA NESSE FORMATO 'TABLE',

E QUE 

TEMOS 



MÚLTIPLAS TABLES,

TIPICAMENTE..









--> E ESSA  DATA






É ARMAZENADA EM UM FORMATO 'NORMALIZED' --> ISSO SIGNIFICA QUE 




'INDIVIDUAL DATA ENTITIES' SÃO EXTRAÍDAS ----->  E EM VEZ 

DE 



COLOCAR TUDO EM 

1 GRANDE TABLE,



NÓS SPLITTAMOS NOSSA DATA 



EM DIFERENTES 

TABLES,


QUE SÃO 

ENTÃO 


CONECTADAS POR MEIO DE 'LOGICAL RELATIONS',

QUE PODEM 

SER 

'PICKED UP' 

E 
'QUERIED'

por meio 

da 


LINGUAGEM SQL...












RELATIONS --> EM RDBMS E COM O SQL, 

A 

DATA É COMUMMENTE 

SPLITTADA AO LONGO DE MÚLTIPLAS TABLES,

QUE SÃO 

RELACIONADAS POR MEIO DE 'record ids'..














DATABASE SYSTEMS QUE ORGANIZAM NORMALIZED DATA 


EM MÚLTIPLAS, RELATED TABLESa,

em que 

cada 

TABLE 



CONTÉM 


MÚLTIPLOS FIELDS E COLUMNS...











-----> CADA 'COLUMN' TAMBÉM É CHAMADA DE 'field'....












--> AÍ TEMOS os 'RECORDS'/'ENTRIES' --> são os rows...












--> BEM... A IDEIA COM O SQL,


QUANDO VOCÊ TRABALHA COM ESSES SISTEMAS SQL,


É QUE 

A ESTRUTURA É CLARAMENTE DEFINIDA -->
 QUANDO VOCÊ 

 CRIA UMA 


 TABLE 
 COM SQL,

 VOCÊ TEM QUE 

 DEFINIR 

 'QUAL COLUMNS 

 ESSA TABLE 

 VAI TER',



 E 

 'QUAIS DATA TYPES ESSAS COLUMNS DEVERÃO TER/segurar'...









 --> E QUALQUER DATA QUE 

 FOR INSERIDA NESSAS COLUMNS,

 DEVERÁ 

 ADERIR A ESSA ESTRUTURA DAS COLUMNS ...






 --> OS VALUES VÃO EM DIFERENTES COLUMNS..





 --> certo... até aí, tudo bem...


 --> SQL É A LINGUAGEM QUE TE AJUDA A FAZER QUERY DESSA DATA, E A TRABALHAR COM ELA, EM GERAL...